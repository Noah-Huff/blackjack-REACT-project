{"version":3,"sources":["components/Player.js","components/Score.js","deck.js","screens/Blackjack.js","App.js","reportWebVitals.js","index.js"],"names":["Player","name","card","score","console","log","className","Row","map","c","value","Image","src","img","index","Score","win","loss","draw","Deck","_id","Blackjack","useState","you","comp","pCard","setPCard","dCard","setDCard","setWin","setLoss","setDraw","drawCard","currentIndex","thisCard","Math","floor","random","newCard","declareWinner","abs","addScore","parseInt","adding","Container","fluid","Col","Button","onClick","length","prevState","getCard","dealerScore","dealerDeck","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52cba880.chunk.js","sourcesContent":["import React from 'react'\nimport { Image, Row } from 'react-bootstrap';\n\nconst Player = ({ name, card, score }) => {\n    //let score = 0;\n    //card.map( c => parseInt(score += c.value));\n    //console.log(\"SCORE \", score)\n    console.log(name, card);\n    return (\n        <div className=\"player\">\n            <h1>{name}</h1>\n            { (score < 22 ? <h3>Score: {score}</h3> : <h3 className=\"score-too-high\">Score: {score} Is Too High!</h3>)}\n            <Row className=\"card-area\">\n                { card.map(c => ( c.value > 0 ? <Image key={c.index} className=\"card\" src={c.img}></Image> : console.log(\"Blank Card\")) )}\n\n            </Row>\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\n// a simple table for displaying the score\nconst Score = ({ win, loss, draw }) => {\n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <th>Wins</th>\n                    <th>Draws</th>\n                    <th>Losses</th>\n                </tr>\n                <tr>\n                    <td>{win}</td>\n                    <td>{draw}</td>\n                    <td>{loss}</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Score\n","const Deck = [\n    //the index is initially set so high so that the card.map() function in the Player.js\n    //component will be certain to have a unique index.\n    //the index is updated in the Blackjack.js component, but is always one element behind.\n\n    //Clubs\n    {\n        _id: 1,\n        card: 'Two of Clubs',\n        value: 2,\n        img: './cards/2C.png',\n        index: 0\n    }, {\n        _id: 2,\n        card: 'Three of Clubs',\n        value: 3,\n        img: './cards/3C.png',\n        index: 0\n    }, {\n        _id: 3,\n        card: 'Four of Clubs',\n        value: 4,\n        img: './cards/4C.png',\n        index: 0\n    }, {\n        _id: 4,\n        card: 'Five of Clubs',\n        value: 5,\n        img: './cards/5C.png',\n        index: 0\n    }, {\n        _id: 5,\n        card: 'Six of Clubs',\n        value: 6,\n        img: './cards/6C.png',\n        index: 0\n    }, {\n        _id: 6,\n        card: 'Seven of Clubs',\n        value: 7,\n        img: './cards/7C.png',\n        index: 0\n    }, {\n        _id: 7,\n        card: 'Eight of Clubs',\n        value: 8,\n        img: './cards/8C.png',\n        index: 0\n    }, {\n        _id: 8,\n        card: 'Nine of Clubs',\n        value: 9,\n        img: './cards/9C.png',\n        index: 0\n    }, {\n        _id: 9,\n        card: 'Ten of Clubs',\n        value: 10,\n        img: './cards/10C.png',\n        index: 0\n    }, {\n        _id: 10,\n        card: 'Jack of Clubs',\n        value: 10,\n        img: './cards/JC.png',\n        index: 0\n    }, {\n        _id: 11,\n        card: 'Queen of Clubs',\n        value: 10,\n        img: './cards/QC.png',\n        index: 0\n    }, {\n        _id: 12,\n        card: 'King of Clubs',\n        value: 10,\n        img: './cards/KC.png',\n        index: 0\n    }, {\n        _id: 13,\n        card: 'Ace of Clubs',\n        value: 11,\n        img: './cards/AC.png',\n        index: 0\n    }, \n    \n\n\n\n    //Spades\n    {\n        _id: 14,\n        card: 'Two of Spades',\n        value: 2,\n        img: './cards/2S.png',\n        index: 0\n    }, {\n        _id: 15,\n        card: 'Three of Spades',\n        value: 3,\n        img: './cards/3S.png',\n        index: 0\n    }, {\n        _id: 16,\n        card: 'Four of Spades',\n        value: 4,\n        img: './cards/4S.png',\n        index: 0\n    }, {\n        _id: 17,\n        card: 'Five of Spades',\n        value: 5,\n        img: './cards/5S.png',\n        index: 0\n    }, {\n        _id: 18,\n        card: 'Six of Spades',\n        value: 6,\n        img: './cards/6S.png',\n        index: 0\n    }, {\n        _id: 19,\n        card: 'Seven of Spades',\n        value: 7,\n        img: './cards/7S.png',\n        index: 0\n    }, {\n        _id: 20,\n        card: 'Eight of Spades',\n        value: 8,\n        img: './cards/8S.png',\n        index: 0\n    }, {\n        _id: 21,\n        card: 'Nine of Spades',\n        value: 9,\n        img: './cards/9S.png',\n        index: 0\n    }, {\n        _id: 22,\n        card: 'Ten of Spades',\n        value: 10,\n        img: './cards/10S.png',\n        index: 0\n    }, {\n        _id: 23,\n        card: 'Jack of Spades',\n        value: 10,\n        img: './cards/JS.png',\n        index: 0\n    }, {\n        _id: 24,\n        card: 'Queen of Spades',\n        value: 10,\n        img: './cards/QS.png',\n        index: 0\n    }, {\n        _id: 25,\n        card: 'King of Spades',\n        value: 10,\n        img: './cards/KS.png',\n        index: 0\n    }, {\n        _id: 26,\n        card: 'Ace of Spades',\n        value: 11,\n        img: './cards/AS.png',\n        index: 0\n    }, \n\n\n\n    //Diamonds\n    {\n        _id: 27,\n        card: 'Two of Diamonds',\n        value: 2,\n        img: './cards/2D.png',\n        index: 0\n    }, {\n        _id: 28,\n        card: 'Three of Diamonds',\n        value: 3,\n        img: './cards/3D.png',\n        index: 0\n    }, {\n        _id: 29,\n        card: 'Four of Diamonds',\n        value: 4,\n        img: './cards/4D.png',\n        index: 0\n    }, {\n        _id: 30,\n        card: 'Five of Diamonds',\n        value: 5,\n        img: './cards/5D.png',\n        index: 0\n    }, {\n        _id: 31,\n        card: 'Six of Diamonds',\n        value: 6,\n        img: './cards/6D.png',\n        index: 0\n    }, {\n        _id: 32,\n        card: 'Seven of Diamonds',\n        value: 7,\n        img: './cards/7D.png',\n        index: 0\n    }, {\n        _id: 33,\n        card: 'Eight of Diamonds',\n        value: 8,\n        img: './cards/8D.png',\n        index: 0\n    }, {\n        _id: 34,\n        card: 'Nine of Diamonds',\n        value: 9,\n        img: './cards/9D.png',\n        index: 0\n    }, {\n        _id: 35,\n        card: 'Ten of Diamonds',\n        value: 10,\n        img: './cards/10D.png',\n        index: 0\n    }, {\n        _id: 36,\n        card: 'Jack of Diamonds',\n        value: 10,\n        img: './cards/JD.png',\n        index: 0\n    }, {\n        _id: 37,\n        card: 'Queen of Diamonds',\n        value: 10,\n        img: './cards/QD.png',\n        index: 0\n    }, {\n        _id: 38,\n        card: 'King of Diamonds',\n        value: 10,\n        img: './cards/KD.png',\n        index: 0\n    }, {\n        _id: 39,\n        card: 'Ace of Diamonds',\n        value: 11,\n        img: './cards/AD.png',\n        index: 0\n    }, \n\n\n\n\n\n    //Hearts\n    {\n        _id: 40,\n        card: 'Two of Hearts',\n        value: 2,\n        img: './cards/2H.png',\n        index: 0\n    }, {\n        _id: 41,\n        card: 'Three of Hearts',\n        value: 3,\n        img: './cards/3H.png',\n        index: 0\n    }, {\n        _id: 42,\n        card: 'Four of Hearts',\n        value: 4,\n        img: './cards/4H.png',\n        index: 0\n    }, {\n        _id: 43,\n        card: 'Five of Hearts',\n        value: 5,\n        img: './cards/5H.png',\n        index: 0\n    }, {\n        _id: 44,\n        card: 'Six of Hearts',\n        value: 6,\n        img: './cards/6H.png',\n        index: 0\n    }, {\n        _id: 45,\n        card: 'Seven of Hearts',\n        value: 7,\n        img: './cards/7H.png',\n        index: 0\n    }, {\n        _id: 46,\n        card: 'Eight of Hearts',\n        value: 8,\n        img: './cards/8H.png',\n        index: 0\n    }, {\n        _id: 47,\n        card: 'Nine of Hearts',\n        value: 9,\n        img: './cards/9H.png',\n        index: 0\n    }, {\n        _id: 48,\n        card: 'Ten of Hearts',\n        value: 10,\n        img: './cards/10H.png',\n        index: 0\n    }, {\n        _id: 49,\n        card: 'Jack of Hearts',\n        value: 10,\n        img: './cards/JH.png',\n        index: 0\n    }, {\n        _id: 50,\n        card: 'Queen of Hearts',\n        value: 10,\n        img: './cards/QH.png',\n        index: 0\n    }, {\n        _id: 51,\n        card: 'King of Hearts',\n        value: 10,\n        img: './cards/KH.png',\n        index: 0\n    }, {\n        _id: 52,\n        card: 'Ace of Hearts',\n        value: 11,\n        img: './cards/AH.png',\n        index: 0\n    }, \n\n]\n\nexport default Deck;","import React, { useState } from 'react'\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Player from '../components/Player';\nimport Score from '../components/Score';\nimport Deck from '../deck';\n\nconst Blackjack = () => {\n    let [you] = useState(\"You\");\n    let [comp] = useState(\"Dealer\");\n    let [pCard, setPCard] = useState([{ _id: '0', card: '0', value: 0, img: '-' }]);\n    let [dCard, setDCard] = useState([{ _id: '0', card: '0', value: 0, img: '-' }]);\n    let [win, setWin] = useState(0);\n    let [loss, setLoss] = useState(0);\n    let [draw, setDraw] = useState(0);\n\n    let ranNumber = () => {\n        let number = Math.floor(Math.random() * 52);\n        return number;\n    }\n\n    let drawCard = (currentIndex) => {\n        let thisCard = ranNumber();\n        let newCard = {\n            img: Deck[thisCard].img,\n            value: Deck[thisCard].value,\n            card: Deck[thisCard].card,\n            _id: Deck[thisCard]._id,\n            index: currentIndex,\n        }\n        console.log(\"DRAW CARD \", currentIndex);\n        return newCard;\n    }\n\n    let playerCard = () => {\n        if (addScore(pCard) < 22 && dCard.length === 1) {\n            setPCard((prevState) => [...prevState, drawCard(pCard.length)]);\n            console.log(\"P-Card: \", pCard);\n        }\n    }\n\n    // the computer's turn\n    let dealerPlay = () => {\n        if (pCard.length > 1) {\n\n            let getCard;\n            let dealerScore = 0;\n            let index = 1;\n            let dealerDeck = [{ _id: '0', card: '0', value: 0, img: '-' }];\n\n            while (dealerScore < 15) {\n                getCard = drawCard(index);\n                if (dealerScore > 14 && getCard.value > 7) {\n                    getCard = drawCard(index);\n                }\n                index += 1;\n                dealerDeck = [...dealerDeck, getCard];\n                dealerScore += +getCard.value;\n                console.log(\"DEALER DECK \", dealerDeck);\n            }\n            setDCard(dealerDeck);\n\n            console.log(\"D-CARD \", dCard);\n\n        }\n    }\n\n    let resetPlay = () => {\n        declareWinner();\n        setPCard([{ _id: '0', card: '0', value: 0, img: '-' }]);\n        setDCard([{ _id: '0', card: '0', value: 0, img: '-' }]);\n        console.log(\"P CARD: \", pCard);\n        console.log(\"D CARD: \", dCard);\n\n    }\n\n\n    let declareWinner = () => {\n        if (Math.abs(addScore(pCard) - 21) === Math.abs(addScore(dCard) - 21)) {\n            setDraw(parseInt(draw + 1));\n        } else if (addScore(pCard) > 21 && addScore(dCard) > 21) {\n            setDraw(parseInt(draw + 1));\n        } else if (Math.abs(addScore(pCard) - 21) < Math.abs(addScore(dCard) - 21) || addScore(dCard) > 21) {\n            if (addScore(pCard) < 22) {\n                setWin(parseInt(win + 1));\n            } else {\n                setLoss(parseInt(loss + 1));\n            }\n        } else {\n            setLoss(parseInt(loss + 1));\n        }\n    }\n\n    let addScore = (adding) => {\n        let score = 0;\n        adding.map(c => parseInt(score += c.value));\n        return score;\n    }\n\n    return (\n        <Container className=\"game-container text-center\">\n            <div className=\"title\">\n                <h1 className=\"\">Let's Play A Game Of Blackjack!</h1>\n                <p className=\"\">\n                    Blackjack is a simple game. You play against the dealer, or computer,\n                    to see who can get the closest to 21.\n                </p>\n                <ul className=\"rules\">\n                    <li>Click \"Hit\" until you think you're close enough to 21</li>\n                    <li>Click \"Stand\" to let the dealer play</li>\n                    <li>Click \"Deal\" to reset the game and add record your score</li>\n                </ul>\n            </div>\n            <Container fluid className=\"player-container\">\n                <Row>\n                    <Col>\n                        <Player name={you} card={pCard} score={addScore(pCard)} />\n                    </Col>\n                    <Col>\n                        <Player name={comp} card={dCard} score={addScore(dCard)} />\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <div className=\"\">\n                        <Button className=\"btn-hit player-btn\" onClick={playerCard}\n                        >Hit</Button>\n                        <Button className=\"btn-stand player-btn\" onClick={dealerPlay}\n                        >Stand</Button>\n                        <Button className=\"btn-deal player-btn\" onClick={resetPlay}\n                        >Deal</Button>\n                    </div>\n                </Row>\n                <Row>\n                    <Score win={win} loss={loss} draw={draw} />\n                </Row>\n            </Container>\n\n\n        </Container>\n    )\n}\n\nexport default Blackjack\n","import Blackjack from './screens/Blackjack';\n\n\nfunction App() {\n  return (\n    <>\n      <Blackjack/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}